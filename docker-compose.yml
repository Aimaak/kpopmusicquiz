version: "3.4"

services:
  php:
    build:
      context: .
      target: app_php
      args:
        SYMFONY_VERSION: ${SYMFONY_VERSION:-}
        STABILITY: ${STABILITY:-stable}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
      # environment:
      #   # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
      #   DATABASE_URL: mysql://${DB_USER:-app}:${DB_PASSWORD:-ejvet}@database/${DB_DATABASE:-app}?serverVersion=${DB_VERSION:-8.0}&charset=utf8mb4

  caddy:
    build:
      context: .
      target: app_caddy
    depends_on:
      - php
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost, caddy:80}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-443}
        protocol: udp

  # database:
  #   image: mysql:${DB_VERSION:-8.0}
  #   command: mysqld --default-authentication-plugin=mysql_native_password
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-ejvet}
  #     MYSQL_DATABASE: ${DB_DATABASE:-app}
  #     # You should definitely change the password in production
  #     MYSQL_PASSWORD: ${DB_PASSWORD:-ejvet}
  #     MYSQL_USER: ${DB_USER:-app}
  #   volumes:
  #     - db-data:/var/lib/mysql:rw
  #     # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
  #     # - ./docker/db/data:/var/lib/mysql/data:rw

  # phpmyamdin:
  #   image: phpmyadmin
  #   restart: always
  #   ports:
  #     - 8080:80
  #   environment:
  #     - PMA_HOST=database

volumes:
  php_socket:
  caddy_data:
  caddy_config:
  # db-data:
